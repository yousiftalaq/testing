@page "/counter"
@using testing.models;

<h1>Counter</h1>
<p role="status">Current count: @currentCount</p>
<button class="btn btn-success" @onclick="OpenServer">Open TCPServer</button>
@* @if (!TCSServerOpen)
{
    <button class="btn btn-success" @onclick="OpenServer">Open TCPServer</button>
}
else
{ *@
    <button class="btn btn-danger" @onclick="StopTCPServer">Stop TCPServer</button>
    <input type="text" @bind="message"/>
    <button @onclick="SendMessage">Send</button>
@* } *@

@code {
    private int currentCount = 0;
    private bool TCSServerOpen = false;
    private string message = "";
    private TcpServer tcpServer;

    private void IncrementCount()
    {
        currentCount++;
        StateHasChanged(); // Update the UI
    }
    private void SendMessage(){
       // tcpServer = new TcpServer();
      //  tcpServer.SendMessage(message); // Start server on port 8080

    }
    private void OpenServer()
    {
        if (!TCSServerOpen)
        {
          //  tcpServer = new TcpServer();
         //   tcpServer.OnIncrementReceived += IncrementCount; // Subscribe to event
         //   tcpServer.Start(8080, message); // Start server on port 8080
            TCSServerOpen = true;
        }
    }

    private void StopTCPServer()
    {
        if (tcpServer != null)
        {
            // tcpServer.OnIncrementReceived -= IncrementCount; // Unsubscribe from event
            // tcpServer.Stop();
            // tcpServer = null;
            // TCSServerOpen = false;
        }
    }
}
