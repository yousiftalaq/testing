@page "/"
@using testing.models;


@* @if (!TCSServerOpen)
{
    <button class="btn btn-success" @onclick="OpenServer">Open TCPServer</button>
}
else
{ *@
<button class="btn btn-danger" @onclick="StopTCPServer">Stop TCPServer</button>
<br />
<br />
<div class="page-container">
    <div class="row">
        <div class="col-6 judge-controller-side">
            <div class="judge-controller-red">
                <label @onclick="sendTCPRequestToAdd">Vote Up</label>
            </div>
            <div class="judge-controller-red">
                <label @onclick="sendTCPRequestToAdd">Vote Down</label>
            </div>
        </div>
        <div class="col-6 judge-controller-side">
            <div class="judge-controller-blue">
                <label @onclick="sendTCPRequestToAdd">Vote Up</label>
            </div>
            <div class="judge-controller-blue">
                <label @onclick="sendTCPRequestToAdd">Vote Down</label>
            </div>
        </div>
    </div>
</div>
@* } *@




@code {
    private int currentCount = 0;
    private bool TCSServerOpen = false;
    private TcpServer tcpServer;

    private void IncrementCount()
    {
        currentCount++;
        StateHasChanged(); // Update the UI
    }

    private void OpenServer()
    {
        if (!TCSServerOpen)
        {
            tcpServer = new TcpServer();
            tcpServer.OnIncrementReceived += IncrementCount; // Subscribe to event
           // tcpServer.Start(8080); // Start server on port 8080
            TCSServerOpen = true;
        }
    }

    private void StopTCPServer()
    {
        if (tcpServer != null)
        {
            tcpServer.OnIncrementReceived -= IncrementCount; // Unsubscribe from event
            tcpServer.Stop();
            tcpServer = null;
            TCSServerOpen = false;
        }
    }

    private void sendTCPRequestToAdd()
    {
        // Signal Signals = new Signal();
        // Signals.SendingSignalAsync();

        tcpServer = new TcpServer();
        // tcpServer.OnIncrementReceived += IncrementCount; // Subscribe to event
       // tcpServer.Start(8080); // Start server on port 8080
                               //  TCSServerOpen = true;
    }
}
